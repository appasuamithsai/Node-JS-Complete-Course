{"ast":null,"code":"import _toConsumableArray from \"/home/amitsa/Documents/node-js/practice/restpractical/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _objectSpread from \"/home/amitsa/Documents/node-js/practice/restpractical/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _classCallCheck from \"/home/amitsa/Documents/node-js/practice/restpractical/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/amitsa/Documents/node-js/practice/restpractical/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/amitsa/Documents/node-js/practice/restpractical/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/amitsa/Documents/node-js/practice/restpractical/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/amitsa/Documents/node-js/practice/restpractical/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/amitsa/Documents/node-js/practice/restpractical/src/pages/Feed/Feed.js\";\nimport React, { Component, Fragment } from \"react\";\nimport Post from \"../../components/Feed/Post/Post\";\nimport Button from \"../../components/Button/Button\";\nimport FeedEdit from \"../../components/Feed/FeedEdit/FeedEdit\";\nimport Input from \"../../components/Form/Input/Input\";\nimport Paginator from \"../../components/Paginator/Paginator\";\nimport Loader from \"../../components/Loader/Loader\";\nimport ErrorHandler from \"../../components/ErrorHandler/ErrorHandler\";\nimport \"./Feed.css\";\n\nvar Feed = /*#__PURE__*/function (_Component) {\n  _inherits(Feed, _Component);\n\n  function Feed() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Feed);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Feed)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      isEditing: false,\n      posts: [],\n      totalPosts: 0,\n      editPost: null,\n      status: \"\",\n      postPage: 1,\n      postsLoading: true,\n      editLoading: false\n    };\n\n    _this.loadPosts = function (direction) {\n      if (direction) {\n        _this.setState({\n          postsLoading: true,\n          posts: []\n        });\n      }\n\n      var page = _this.state.postPage;\n\n      if (direction === \"next\") {\n        page++;\n\n        _this.setState({\n          postPage: page\n        });\n      }\n\n      if (direction === \"previous\") {\n        page--;\n\n        _this.setState({\n          postPage: page\n        });\n      }\n\n      fetch(\"http://localhost:8080/feed/posts?page=\" + page, {\n        headers: {\n          Authorization: ''\n        }\n      }).then(function (res) {\n        if (res.status !== 200) {\n          throw new Error(\"Failed to fetch posts.\");\n        }\n\n        return res.json();\n      }).then(function (resData) {\n        _this.setState({\n          posts: resData.posts.map(function (post) {\n            return _objectSpread({}, post, {\n              imagePath: post.imageUrl\n            });\n          }),\n          totalPosts: resData.totalItems,\n          postsLoading: false\n        });\n      }).catch(_this.catchError);\n    };\n\n    _this.statusUpdateHandler = function (event) {\n      event.preventDefault();\n      fetch(\"URL\").then(function (res) {\n        if (res.status !== 200 && res.status !== 201) {\n          throw new Error(\"Can't update status!\");\n        }\n\n        return res.json();\n      }).then(function (resData) {\n        console.log(resData);\n      }).catch(_this.catchError);\n    };\n\n    _this.newPostHandler = function () {\n      _this.setState({\n        isEditing: true\n      });\n    };\n\n    _this.startEditPostHandler = function (postId) {\n      _this.setState(function (prevState) {\n        var loadedPost = _objectSpread({}, prevState.posts.find(function (p) {\n          return p._id === postId;\n        }));\n\n        return {\n          isEditing: true,\n          editPost: loadedPost\n        };\n      });\n    };\n\n    _this.cancelEditHandler = function () {\n      _this.setState({\n        isEditing: false,\n        editPost: null\n      });\n    };\n\n    _this.finishEditHandler = function (postData) {\n      _this.setState({\n        editLoading: true\n      });\n\n      var formData = new FormData();\n      formData.append(\"title\", postData.title);\n      formData.append(\"content\", postData.content);\n      formData.append(\"image\", postData.image);\n      var url = \"http://localhost:8080/feed/post\";\n      var method = \"POST\";\n\n      if (_this.state.editPost) {\n        url = \"http://localhost:8080/feed/post/\" + _this.state.editPost._id;\n        method = \"PUT\";\n      }\n\n      fetch(url, {\n        method: method,\n        body: formData\n      }).then(function (res) {\n        if (res.status !== 200 && res.status !== 201) {\n          throw new Error(\"Creating or editing a post failed!\");\n        }\n\n        return res.json();\n      }).then(function (resData) {\n        var post = {\n          _id: resData.post._id,\n          title: resData.post.title,\n          content: resData.post.content,\n          creator: resData.post.creator,\n          createdAt: resData.post.createdAt\n        };\n\n        _this.setState(function (prevState) {\n          var updatedPosts = _toConsumableArray(prevState.posts);\n\n          if (prevState.editPost) {\n            var postIndex = prevState.posts.findIndex(function (p) {\n              return p._id === prevState.editPost._id;\n            });\n            updatedPosts[postIndex] = post;\n          } else if (prevState.posts.length < 2) {\n            updatedPosts = prevState.posts.concat(post);\n          }\n\n          return {\n            posts: updatedPosts,\n            isEditing: false,\n            editPost: null,\n            editLoading: false\n          };\n        });\n      }).catch(function (err) {\n        console.log(err);\n\n        _this.setState({\n          isEditing: false,\n          editPost: null,\n          editLoading: false,\n          error: err\n        });\n      });\n    };\n\n    _this.statusInputChangeHandler = function (input, value) {\n      _this.setState({\n        status: value\n      });\n    };\n\n    _this.deletePostHandler = function (postId) {\n      _this.setState({\n        postsLoading: true\n      });\n\n      fetch(\"http://localhost:8080/feed/post/\" + postId, {\n        method: 'DELETE'\n      }).then(function (res) {\n        if (res.status !== 200 && res.status !== 201) {\n          throw new Error(\"Deleting a post failed!\");\n        }\n\n        return res.json();\n      }).then(function (resData) {\n        console.log(resData);\n\n        _this.setState(function (prevState) {\n          var updatedPosts = prevState.posts.filter(function (p) {\n            return p._id !== postId;\n          });\n          return {\n            posts: updatedPosts,\n            postsLoading: false\n          };\n        });\n      }).catch(function (err) {\n        console.log(err);\n\n        _this.setState({\n          postsLoading: false\n        });\n      });\n    };\n\n    _this.errorHandler = function () {\n      _this.setState({\n        error: null\n      });\n    };\n\n    _this.catchError = function (error) {\n      _this.setState({\n        error: error\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(Feed, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      fetch(\"URL\").then(function (res) {\n        if (res.status !== 200) {\n          throw new Error(\"Failed to fetch user status.\");\n        }\n\n        return res.json();\n      }).then(function (resData) {\n        _this2.setState({\n          status: resData.status\n        });\n      }).catch(this.catchError);\n      this.loadPosts();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      return /*#__PURE__*/React.createElement(Fragment, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 209,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(ErrorHandler, {\n        error: this.state.error,\n        onHandle: this.errorHandler,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 210,\n          columnNumber: 9\n        }\n      }), /*#__PURE__*/React.createElement(FeedEdit, {\n        editing: this.state.isEditing,\n        selectedPost: this.state.editPost,\n        loading: this.state.editLoading,\n        onCancelEdit: this.cancelEditHandler,\n        onFinishEdit: this.finishEditHandler,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 211,\n          columnNumber: 9\n        }\n      }), /*#__PURE__*/React.createElement(\"section\", {\n        className: \"feed__status\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 218,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"form\", {\n        onSubmit: this.statusUpdateHandler,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 219,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(Input, {\n        type: \"text\",\n        placeholder: \"Your status\",\n        control: \"input\",\n        onChange: this.statusInputChangeHandler,\n        value: this.state.status,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 220,\n          columnNumber: 13\n        }\n      }), /*#__PURE__*/React.createElement(Button, {\n        mode: \"flat\",\n        type: \"submit\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 227,\n          columnNumber: 13\n        }\n      }, \"Update\"))), /*#__PURE__*/React.createElement(\"section\", {\n        className: \"feed__control\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 232,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(Button, {\n        mode: \"raised\",\n        design: \"accent\",\n        onClick: this.newPostHandler,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 233,\n          columnNumber: 11\n        }\n      }, \"New Post\")), /*#__PURE__*/React.createElement(\"section\", {\n        className: \"feed\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 237,\n          columnNumber: 9\n        }\n      }, this.state.postsLoading && /*#__PURE__*/React.createElement(\"div\", {\n        style: {\n          textAlign: \"center\",\n          marginTop: \"2rem\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 239,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Loader, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 240,\n          columnNumber: 15\n        }\n      })), this.state.posts.length <= 0 && !this.state.postsLoading ? /*#__PURE__*/React.createElement(\"p\", {\n        style: {\n          textAlign: \"center\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 244,\n          columnNumber: 13\n        }\n      }, \"No posts found.\") : null, !this.state.postsLoading && /*#__PURE__*/React.createElement(Paginator, {\n        onPrevious: this.loadPosts.bind(this, \"previous\"),\n        onNext: this.loadPosts.bind(this, \"next\"),\n        lastPage: Math.ceil(this.state.totalPosts / 2),\n        currentPage: this.state.postPage,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 247,\n          columnNumber: 13\n        }\n      }, this.state.posts.map(function (post) {\n        return /*#__PURE__*/React.createElement(Post, {\n          key: post._id,\n          id: post._id,\n          author: post.creator.name,\n          date: new Date(post.createdAt).toLocaleDateString(\"en-US\"),\n          title: post.title,\n          image: post.imageUrl,\n          content: post.content,\n          onStartEdit: _this3.startEditPostHandler.bind(_this3, post._id),\n          onDelete: _this3.deletePostHandler.bind(_this3, post._id),\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 254,\n            columnNumber: 17\n          }\n        });\n      }))));\n    }\n  }]);\n\n  return Feed;\n}(Component);\n\nexport default Feed;","map":{"version":3,"sources":["/home/amitsa/Documents/node-js/practice/restpractical/src/pages/Feed/Feed.js"],"names":["React","Component","Fragment","Post","Button","FeedEdit","Input","Paginator","Loader","ErrorHandler","Feed","state","isEditing","posts","totalPosts","editPost","status","postPage","postsLoading","editLoading","loadPosts","direction","setState","page","fetch","headers","Authorization","then","res","Error","json","resData","map","post","imagePath","imageUrl","totalItems","catch","catchError","statusUpdateHandler","event","preventDefault","console","log","newPostHandler","startEditPostHandler","postId","prevState","loadedPost","find","p","_id","cancelEditHandler","finishEditHandler","postData","formData","FormData","append","title","content","image","url","method","body","creator","createdAt","updatedPosts","postIndex","findIndex","length","concat","err","error","statusInputChangeHandler","input","value","deletePostHandler","filter","errorHandler","textAlign","marginTop","bind","Math","ceil","name","Date","toLocaleDateString"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AAEA,OAAOC,IAAP,MAAiB,iCAAjB;AACA,OAAOC,MAAP,MAAmB,gCAAnB;AACA,OAAOC,QAAP,MAAqB,yCAArB;AACA,OAAOC,KAAP,MAAkB,mCAAlB;AACA,OAAOC,SAAP,MAAsB,sCAAtB;AACA,OAAOC,MAAP,MAAmB,gCAAnB;AACA,OAAOC,YAAP,MAAyB,4CAAzB;AACA,OAAO,YAAP;;IAEMC,I;;;;;;;;;;;;;;;UACJC,K,GAAQ;AACNC,MAAAA,SAAS,EAAE,KADL;AAENC,MAAAA,KAAK,EAAE,EAFD;AAGNC,MAAAA,UAAU,EAAE,CAHN;AAINC,MAAAA,QAAQ,EAAE,IAJJ;AAKNC,MAAAA,MAAM,EAAE,EALF;AAMNC,MAAAA,QAAQ,EAAE,CANJ;AAONC,MAAAA,YAAY,EAAE,IAPR;AAQNC,MAAAA,WAAW,EAAE;AARP,K;;UA2BRC,S,GAAY,UAACC,SAAD,EAAe;AACzB,UAAIA,SAAJ,EAAe;AACb,cAAKC,QAAL,CAAc;AAAEJ,UAAAA,YAAY,EAAE,IAAhB;AAAsBL,UAAAA,KAAK,EAAE;AAA7B,SAAd;AACD;;AACD,UAAIU,IAAI,GAAG,MAAKZ,KAAL,CAAWM,QAAtB;;AACA,UAAII,SAAS,KAAK,MAAlB,EAA0B;AACxBE,QAAAA,IAAI;;AACJ,cAAKD,QAAL,CAAc;AAAEL,UAAAA,QAAQ,EAAEM;AAAZ,SAAd;AACD;;AACD,UAAIF,SAAS,KAAK,UAAlB,EAA8B;AAC5BE,QAAAA,IAAI;;AACJ,cAAKD,QAAL,CAAc;AAAEL,UAAAA,QAAQ,EAAEM;AAAZ,SAAd;AACD;;AACDC,MAAAA,KAAK,CAAC,2CAAyCD,IAA1C,EAA+C;AAClDE,QAAAA,OAAO,EAAC;AACNC,UAAAA,aAAa,EAAG;AADV;AAD0C,OAA/C,CAAL,CAKGC,IALH,CAKQ,UAACC,GAAD,EAAS;AACb,YAAIA,GAAG,CAACZ,MAAJ,KAAe,GAAnB,EAAwB;AACtB,gBAAM,IAAIa,KAAJ,CAAU,wBAAV,CAAN;AACD;;AACD,eAAOD,GAAG,CAACE,IAAJ,EAAP;AACD,OAVH,EAWGH,IAXH,CAWQ,UAACI,OAAD,EAAa;AACjB,cAAKT,QAAL,CAAc;AACZT,UAAAA,KAAK,EAAEkB,OAAO,CAAClB,KAAR,CAAcmB,GAAd,CAAkB,UAACC,IAAD,EAAU;AACjC,qCAAYA,IAAZ;AAAkBC,cAAAA,SAAS,EAAED,IAAI,CAACE;AAAlC;AACD,WAFM,CADK;AAIZrB,UAAAA,UAAU,EAAEiB,OAAO,CAACK,UAJR;AAKZlB,UAAAA,YAAY,EAAE;AALF,SAAd;AAOD,OAnBH,EAoBGmB,KApBH,CAoBS,MAAKC,UApBd;AAqBD,K;;UAEDC,mB,GAAsB,UAACC,KAAD,EAAW;AAC/BA,MAAAA,KAAK,CAACC,cAAN;AACAjB,MAAAA,KAAK,CAAC,KAAD,CAAL,CACGG,IADH,CACQ,UAACC,GAAD,EAAS;AACb,YAAIA,GAAG,CAACZ,MAAJ,KAAe,GAAf,IAAsBY,GAAG,CAACZ,MAAJ,KAAe,GAAzC,EAA8C;AAC5C,gBAAM,IAAIa,KAAJ,CAAU,sBAAV,CAAN;AACD;;AACD,eAAOD,GAAG,CAACE,IAAJ,EAAP;AACD,OANH,EAOGH,IAPH,CAOQ,UAACI,OAAD,EAAa;AACjBW,QAAAA,OAAO,CAACC,GAAR,CAAYZ,OAAZ;AACD,OATH,EAUGM,KAVH,CAUS,MAAKC,UAVd;AAWD,K;;UAEDM,c,GAAiB,YAAM;AACrB,YAAKtB,QAAL,CAAc;AAAEV,QAAAA,SAAS,EAAE;AAAb,OAAd;AACD,K;;UAEDiC,oB,GAAuB,UAACC,MAAD,EAAY;AACjC,YAAKxB,QAAL,CAAc,UAACyB,SAAD,EAAe;AAC3B,YAAMC,UAAU,qBAAQD,SAAS,CAAClC,KAAV,CAAgBoC,IAAhB,CAAqB,UAACC,CAAD;AAAA,iBAAOA,CAAC,CAACC,GAAF,KAAUL,MAAjB;AAAA,SAArB,CAAR,CAAhB;;AAEA,eAAO;AACLlC,UAAAA,SAAS,EAAE,IADN;AAELG,UAAAA,QAAQ,EAAEiC;AAFL,SAAP;AAID,OAPD;AAQD,K;;UAEDI,iB,GAAoB,YAAM;AACxB,YAAK9B,QAAL,CAAc;AAAEV,QAAAA,SAAS,EAAE,KAAb;AAAoBG,QAAAA,QAAQ,EAAE;AAA9B,OAAd;AACD,K;;UAEDsC,iB,GAAoB,UAACC,QAAD,EAAc;AAChC,YAAKhC,QAAL,CAAc;AACZH,QAAAA,WAAW,EAAE;AADD,OAAd;;AAGA,UAAMoC,QAAQ,GAAG,IAAIC,QAAJ,EAAjB;AACAD,MAAAA,QAAQ,CAACE,MAAT,CAAgB,OAAhB,EAAyBH,QAAQ,CAACI,KAAlC;AACAH,MAAAA,QAAQ,CAACE,MAAT,CAAgB,SAAhB,EAA2BH,QAAQ,CAACK,OAApC;AACAJ,MAAAA,QAAQ,CAACE,MAAT,CAAgB,OAAhB,EAAyBH,QAAQ,CAACM,KAAlC;AACA,UAAIC,GAAG,GAAG,iCAAV;AACA,UAAIC,MAAM,GAAG,MAAb;;AACA,UAAI,MAAKnD,KAAL,CAAWI,QAAf,EAAyB;AACvB8C,QAAAA,GAAG,GAAG,qCAAmC,MAAKlD,KAAL,CAAWI,QAAX,CAAoBoC,GAA7D;AACAW,QAAAA,MAAM,GAAC,KAAP;AACD;;AACDtC,MAAAA,KAAK,CAACqC,GAAD,EAAM;AACTC,QAAAA,MAAM,EAAEA,MADC;AAETC,QAAAA,IAAI,EAAER;AAFG,OAAN,CAAL,CAIG5B,IAJH,CAIQ,UAACC,GAAD,EAAS;AACb,YAAIA,GAAG,CAACZ,MAAJ,KAAe,GAAf,IAAsBY,GAAG,CAACZ,MAAJ,KAAe,GAAzC,EAA8C;AAC5C,gBAAM,IAAIa,KAAJ,CAAU,oCAAV,CAAN;AACD;;AACD,eAAOD,GAAG,CAACE,IAAJ,EAAP;AACD,OATH,EAUGH,IAVH,CAUQ,UAACI,OAAD,EAAa;AACjB,YAAME,IAAI,GAAG;AACXkB,UAAAA,GAAG,EAAEpB,OAAO,CAACE,IAAR,CAAakB,GADP;AAEXO,UAAAA,KAAK,EAAE3B,OAAO,CAACE,IAAR,CAAayB,KAFT;AAGXC,UAAAA,OAAO,EAAE5B,OAAO,CAACE,IAAR,CAAa0B,OAHX;AAIXK,UAAAA,OAAO,EAAEjC,OAAO,CAACE,IAAR,CAAa+B,OAJX;AAKXC,UAAAA,SAAS,EAAElC,OAAO,CAACE,IAAR,CAAagC;AALb,SAAb;;AAOA,cAAK3C,QAAL,CAAc,UAACyB,SAAD,EAAe;AAC3B,cAAImB,YAAY,sBAAOnB,SAAS,CAAClC,KAAjB,CAAhB;;AACA,cAAIkC,SAAS,CAAChC,QAAd,EAAwB;AACtB,gBAAMoD,SAAS,GAAGpB,SAAS,CAAClC,KAAV,CAAgBuD,SAAhB,CAChB,UAAClB,CAAD;AAAA,qBAAOA,CAAC,CAACC,GAAF,KAAUJ,SAAS,CAAChC,QAAV,CAAmBoC,GAApC;AAAA,aADgB,CAAlB;AAGAe,YAAAA,YAAY,CAACC,SAAD,CAAZ,GAA0BlC,IAA1B;AACD,WALD,MAKO,IAAIc,SAAS,CAAClC,KAAV,CAAgBwD,MAAhB,GAAyB,CAA7B,EAAgC;AACrCH,YAAAA,YAAY,GAAGnB,SAAS,CAAClC,KAAV,CAAgByD,MAAhB,CAAuBrC,IAAvB,CAAf;AACD;;AACD,iBAAO;AACLpB,YAAAA,KAAK,EAAEqD,YADF;AAELtD,YAAAA,SAAS,EAAE,KAFN;AAGLG,YAAAA,QAAQ,EAAE,IAHL;AAILI,YAAAA,WAAW,EAAE;AAJR,WAAP;AAMD,SAhBD;AAiBD,OAnCH,EAoCGkB,KApCH,CAoCS,UAACkC,GAAD,EAAS;AACd7B,QAAAA,OAAO,CAACC,GAAR,CAAY4B,GAAZ;;AACA,cAAKjD,QAAL,CAAc;AACZV,UAAAA,SAAS,EAAE,KADC;AAEZG,UAAAA,QAAQ,EAAE,IAFE;AAGZI,UAAAA,WAAW,EAAE,KAHD;AAIZqD,UAAAA,KAAK,EAAED;AAJK,SAAd;AAMD,OA5CH;AA6CD,K;;UAEDE,wB,GAA2B,UAACC,KAAD,EAAQC,KAAR,EAAkB;AAC3C,YAAKrD,QAAL,CAAc;AAAEN,QAAAA,MAAM,EAAE2D;AAAV,OAAd;AACD,K;;UAEDC,iB,GAAoB,UAAC9B,MAAD,EAAY;AAC9B,YAAKxB,QAAL,CAAc;AAAEJ,QAAAA,YAAY,EAAE;AAAhB,OAAd;;AACAM,MAAAA,KAAK,CAAC,qCAAmCsB,MAApC,EAA2C;AAC9CgB,QAAAA,MAAM,EAAC;AADuC,OAA3C,CAAL,CAGGnC,IAHH,CAGQ,UAACC,GAAD,EAAS;AACb,YAAIA,GAAG,CAACZ,MAAJ,KAAe,GAAf,IAAsBY,GAAG,CAACZ,MAAJ,KAAe,GAAzC,EAA8C;AAC5C,gBAAM,IAAIa,KAAJ,CAAU,yBAAV,CAAN;AACD;;AACD,eAAOD,GAAG,CAACE,IAAJ,EAAP;AACD,OARH,EASGH,IATH,CASQ,UAACI,OAAD,EAAa;AACjBW,QAAAA,OAAO,CAACC,GAAR,CAAYZ,OAAZ;;AACA,cAAKT,QAAL,CAAc,UAACyB,SAAD,EAAe;AAC3B,cAAMmB,YAAY,GAAGnB,SAAS,CAAClC,KAAV,CAAgBgE,MAAhB,CAAuB,UAAC3B,CAAD;AAAA,mBAAOA,CAAC,CAACC,GAAF,KAAUL,MAAjB;AAAA,WAAvB,CAArB;AACA,iBAAO;AAAEjC,YAAAA,KAAK,EAAEqD,YAAT;AAAuBhD,YAAAA,YAAY,EAAE;AAArC,WAAP;AACD,SAHD;AAID,OAfH,EAgBGmB,KAhBH,CAgBS,UAACkC,GAAD,EAAS;AACd7B,QAAAA,OAAO,CAACC,GAAR,CAAY4B,GAAZ;;AACA,cAAKjD,QAAL,CAAc;AAAEJ,UAAAA,YAAY,EAAE;AAAhB,SAAd;AACD,OAnBH;AAoBD,K;;UAED4D,Y,GAAe,YAAM;AACnB,YAAKxD,QAAL,CAAc;AAAEkD,QAAAA,KAAK,EAAE;AAAT,OAAd;AACD,K;;UAEDlC,U,GAAa,UAACkC,KAAD,EAAW;AACtB,YAAKlD,QAAL,CAAc;AAAEkD,QAAAA,KAAK,EAAEA;AAAT,OAAd;AACD,K;;;;;;;wCArLmB;AAAA;;AAClBhD,MAAAA,KAAK,CAAC,KAAD,CAAL,CACGG,IADH,CACQ,UAACC,GAAD,EAAS;AACb,YAAIA,GAAG,CAACZ,MAAJ,KAAe,GAAnB,EAAwB;AACtB,gBAAM,IAAIa,KAAJ,CAAU,8BAAV,CAAN;AACD;;AACD,eAAOD,GAAG,CAACE,IAAJ,EAAP;AACD,OANH,EAOGH,IAPH,CAOQ,UAACI,OAAD,EAAa;AACjB,QAAA,MAAI,CAACT,QAAL,CAAc;AAAEN,UAAAA,MAAM,EAAEe,OAAO,CAACf;AAAlB,SAAd;AACD,OATH,EAUGqB,KAVH,CAUS,KAAKC,UAVd;AAYA,WAAKlB,SAAL;AACD;;;6BAyKQ;AAAA;;AACP,0BACE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE,oBAAC,YAAD;AAAc,QAAA,KAAK,EAAE,KAAKT,KAAL,CAAW6D,KAAhC;AAAuC,QAAA,QAAQ,EAAE,KAAKM,YAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,eAEE,oBAAC,QAAD;AACE,QAAA,OAAO,EAAE,KAAKnE,KAAL,CAAWC,SADtB;AAEE,QAAA,YAAY,EAAE,KAAKD,KAAL,CAAWI,QAF3B;AAGE,QAAA,OAAO,EAAE,KAAKJ,KAAL,CAAWQ,WAHtB;AAIE,QAAA,YAAY,EAAE,KAAKiC,iBAJrB;AAKE,QAAA,YAAY,EAAE,KAAKC,iBALrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFF,eASE;AAAS,QAAA,SAAS,EAAC,cAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE;AAAM,QAAA,QAAQ,EAAE,KAAKd,mBAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE,oBAAC,KAAD;AACE,QAAA,IAAI,EAAC,MADP;AAEE,QAAA,WAAW,EAAC,aAFd;AAGE,QAAA,OAAO,EAAC,OAHV;AAIE,QAAA,QAAQ,EAAE,KAAKkC,wBAJjB;AAKE,QAAA,KAAK,EAAE,KAAK9D,KAAL,CAAWK,MALpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,eAQE,oBAAC,MAAD;AAAQ,QAAA,IAAI,EAAC,MAAb;AAAoB,QAAA,IAAI,EAAC,QAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBARF,CADF,CATF,eAuBE;AAAS,QAAA,SAAS,EAAC,eAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE,oBAAC,MAAD;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAsB,QAAA,MAAM,EAAC,QAA7B;AAAsC,QAAA,OAAO,EAAE,KAAK4B,cAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,CAvBF,eA4BE;AAAS,QAAA,SAAS,EAAC,MAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACG,KAAKjC,KAAL,CAAWO,YAAX,iBACC;AAAK,QAAA,KAAK,EAAE;AAAE6D,UAAAA,SAAS,EAAE,QAAb;AAAuBC,UAAAA,SAAS,EAAE;AAAlC,SAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CAFJ,EAMG,KAAKrE,KAAL,CAAWE,KAAX,CAAiBwD,MAAjB,IAA2B,CAA3B,IAAgC,CAAC,KAAK1D,KAAL,CAAWO,YAA5C,gBACC;AAAG,QAAA,KAAK,EAAE;AAAE6D,UAAAA,SAAS,EAAE;AAAb,SAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BADD,GAEG,IARN,EASG,CAAC,KAAKpE,KAAL,CAAWO,YAAZ,iBACC,oBAAC,SAAD;AACE,QAAA,UAAU,EAAE,KAAKE,SAAL,CAAe6D,IAAf,CAAoB,IAApB,EAA0B,UAA1B,CADd;AAEE,QAAA,MAAM,EAAE,KAAK7D,SAAL,CAAe6D,IAAf,CAAoB,IAApB,EAA0B,MAA1B,CAFV;AAGE,QAAA,QAAQ,EAAEC,IAAI,CAACC,IAAL,CAAU,KAAKxE,KAAL,CAAWG,UAAX,GAAwB,CAAlC,CAHZ;AAIE,QAAA,WAAW,EAAE,KAAKH,KAAL,CAAWM,QAJ1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAMG,KAAKN,KAAL,CAAWE,KAAX,CAAiBmB,GAAjB,CAAqB,UAACC,IAAD;AAAA,4BACpB,oBAAC,IAAD;AACE,UAAA,GAAG,EAAEA,IAAI,CAACkB,GADZ;AAEE,UAAA,EAAE,EAAElB,IAAI,CAACkB,GAFX;AAGE,UAAA,MAAM,EAAElB,IAAI,CAAC+B,OAAL,CAAaoB,IAHvB;AAIE,UAAA,IAAI,EAAE,IAAIC,IAAJ,CAASpD,IAAI,CAACgC,SAAd,EAAyBqB,kBAAzB,CAA4C,OAA5C,CAJR;AAKE,UAAA,KAAK,EAAErD,IAAI,CAACyB,KALd;AAME,UAAA,KAAK,EAAEzB,IAAI,CAACE,QANd;AAOE,UAAA,OAAO,EAAEF,IAAI,CAAC0B,OAPhB;AAQE,UAAA,WAAW,EAAE,MAAI,CAACd,oBAAL,CAA0BoC,IAA1B,CAA+B,MAA/B,EAAqChD,IAAI,CAACkB,GAA1C,CARf;AASE,UAAA,QAAQ,EAAE,MAAI,CAACyB,iBAAL,CAAuBK,IAAvB,CAA4B,MAA5B,EAAkChD,IAAI,CAACkB,GAAvC,CATZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADoB;AAAA,OAArB,CANH,CAVJ,CA5BF,CADF;AA+DD;;;;EAnQgBlD,S;;AAsQnB,eAAeS,IAAf","sourcesContent":["import React, { Component, Fragment } from \"react\";\n\nimport Post from \"../../components/Feed/Post/Post\";\nimport Button from \"../../components/Button/Button\";\nimport FeedEdit from \"../../components/Feed/FeedEdit/FeedEdit\";\nimport Input from \"../../components/Form/Input/Input\";\nimport Paginator from \"../../components/Paginator/Paginator\";\nimport Loader from \"../../components/Loader/Loader\";\nimport ErrorHandler from \"../../components/ErrorHandler/ErrorHandler\";\nimport \"./Feed.css\";\n\nclass Feed extends Component {\n  state = {\n    isEditing: false,\n    posts: [],\n    totalPosts: 0,\n    editPost: null,\n    status: \"\",\n    postPage: 1,\n    postsLoading: true,\n    editLoading: false,\n  };\n\n  componentDidMount() {\n    fetch(\"URL\")\n      .then((res) => {\n        if (res.status !== 200) {\n          throw new Error(\"Failed to fetch user status.\");\n        }\n        return res.json();\n      })\n      .then((resData) => {\n        this.setState({ status: resData.status });\n      })\n      .catch(this.catchError);\n\n    this.loadPosts();\n  }\n\n  loadPosts = (direction) => {\n    if (direction) {\n      this.setState({ postsLoading: true, posts: [] });\n    }\n    let page = this.state.postPage;\n    if (direction === \"next\") {\n      page++;\n      this.setState({ postPage: page });\n    }\n    if (direction === \"previous\") {\n      page--;\n      this.setState({ postPage: page });\n    }\n    fetch(\"http://localhost:8080/feed/posts?page=\"+page,{\n      headers:{\n        Authorization : ''\n      }\n    })\n      .then((res) => {\n        if (res.status !== 200) {\n          throw new Error(\"Failed to fetch posts.\");\n        }\n        return res.json();\n      })\n      .then((resData) => {\n        this.setState({\n          posts: resData.posts.map((post) => {\n            return { ...post, imagePath: post.imageUrl };\n          }),\n          totalPosts: resData.totalItems,\n          postsLoading: false,\n        });\n      })\n      .catch(this.catchError);\n  };\n\n  statusUpdateHandler = (event) => {\n    event.preventDefault();\n    fetch(\"URL\")\n      .then((res) => {\n        if (res.status !== 200 && res.status !== 201) {\n          throw new Error(\"Can't update status!\");\n        }\n        return res.json();\n      })\n      .then((resData) => {\n        console.log(resData);\n      })\n      .catch(this.catchError);\n  };\n\n  newPostHandler = () => {\n    this.setState({ isEditing: true });\n  };\n\n  startEditPostHandler = (postId) => {\n    this.setState((prevState) => {\n      const loadedPost = { ...prevState.posts.find((p) => p._id === postId) };\n\n      return {\n        isEditing: true,\n        editPost: loadedPost,\n      };\n    });\n  };\n\n  cancelEditHandler = () => {\n    this.setState({ isEditing: false, editPost: null });\n  };\n\n  finishEditHandler = (postData) => {\n    this.setState({\n      editLoading: true,\n    });\n    const formData = new FormData();\n    formData.append(\"title\", postData.title);\n    formData.append(\"content\", postData.content);\n    formData.append(\"image\", postData.image);\n    let url = \"http://localhost:8080/feed/post\";\n    let method = \"POST\";\n    if (this.state.editPost) {\n      url = \"http://localhost:8080/feed/post/\"+this.state.editPost._id;\n      method=\"PUT\";\n    }\n    fetch(url, {\n      method: method,\n      body: formData,\n    })\n      .then((res) => {\n        if (res.status !== 200 && res.status !== 201) {\n          throw new Error(\"Creating or editing a post failed!\");\n        }\n        return res.json();\n      })\n      .then((resData) => {\n        const post = {\n          _id: resData.post._id,\n          title: resData.post.title,\n          content: resData.post.content,\n          creator: resData.post.creator,\n          createdAt: resData.post.createdAt,\n        };\n        this.setState((prevState) => {\n          let updatedPosts = [...prevState.posts];\n          if (prevState.editPost) {\n            const postIndex = prevState.posts.findIndex(\n              (p) => p._id === prevState.editPost._id\n            );\n            updatedPosts[postIndex] = post;\n          } else if (prevState.posts.length < 2) {\n            updatedPosts = prevState.posts.concat(post);\n          }\n          return {\n            posts: updatedPosts,\n            isEditing: false,\n            editPost: null,\n            editLoading: false,\n          };\n        });\n      })\n      .catch((err) => {\n        console.log(err);\n        this.setState({\n          isEditing: false,\n          editPost: null,\n          editLoading: false,\n          error: err,\n        });\n      });\n  };\n\n  statusInputChangeHandler = (input, value) => {\n    this.setState({ status: value });\n  };\n\n  deletePostHandler = (postId) => {\n    this.setState({ postsLoading: true });\n    fetch(\"http://localhost:8080/feed/post/\"+postId,{\n      method:'DELETE'\n    })\n      .then((res) => {\n        if (res.status !== 200 && res.status !== 201) {\n          throw new Error(\"Deleting a post failed!\");\n        }\n        return res.json();\n      })\n      .then((resData) => {\n        console.log(resData);\n        this.setState((prevState) => {\n          const updatedPosts = prevState.posts.filter((p) => p._id !== postId);\n          return { posts: updatedPosts, postsLoading: false };\n        });\n      })\n      .catch((err) => {\n        console.log(err);\n        this.setState({ postsLoading: false });\n      });\n  };\n\n  errorHandler = () => {\n    this.setState({ error: null });\n  };\n\n  catchError = (error) => {\n    this.setState({ error: error });\n  };\n\n  render() {\n    return (\n      <Fragment>\n        <ErrorHandler error={this.state.error} onHandle={this.errorHandler} />\n        <FeedEdit\n          editing={this.state.isEditing}\n          selectedPost={this.state.editPost}\n          loading={this.state.editLoading}\n          onCancelEdit={this.cancelEditHandler}\n          onFinishEdit={this.finishEditHandler}\n        />\n        <section className=\"feed__status\">\n          <form onSubmit={this.statusUpdateHandler}>\n            <Input\n              type=\"text\"\n              placeholder=\"Your status\"\n              control=\"input\"\n              onChange={this.statusInputChangeHandler}\n              value={this.state.status}\n            />\n            <Button mode=\"flat\" type=\"submit\">\n              Update\n            </Button>\n          </form>\n        </section>\n        <section className=\"feed__control\">\n          <Button mode=\"raised\" design=\"accent\" onClick={this.newPostHandler}>\n            New Post\n          </Button>\n        </section>\n        <section className=\"feed\">\n          {this.state.postsLoading && (\n            <div style={{ textAlign: \"center\", marginTop: \"2rem\" }}>\n              <Loader />\n            </div>\n          )}\n          {this.state.posts.length <= 0 && !this.state.postsLoading ? (\n            <p style={{ textAlign: \"center\" }}>No posts found.</p>\n          ) : null}\n          {!this.state.postsLoading && (\n            <Paginator\n              onPrevious={this.loadPosts.bind(this, \"previous\")}\n              onNext={this.loadPosts.bind(this, \"next\")}\n              lastPage={Math.ceil(this.state.totalPosts / 2)}\n              currentPage={this.state.postPage}\n            >\n              {this.state.posts.map((post) => (\n                <Post\n                  key={post._id}\n                  id={post._id}\n                  author={post.creator.name}\n                  date={new Date(post.createdAt).toLocaleDateString(\"en-US\")}\n                  title={post.title}\n                  image={post.imageUrl}\n                  content={post.content}\n                  onStartEdit={this.startEditPostHandler.bind(this, post._id)}\n                  onDelete={this.deletePostHandler.bind(this, post._id)}\n                />\n              ))}\n            </Paginator>\n          )}\n        </section>\n      </Fragment>\n    );\n  }\n}\n\nexport default Feed;\n"]},"metadata":{},"sourceType":"module"}